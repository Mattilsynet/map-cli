# Intended for local development with wash up and nats running on port 4222

apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: {{ .ComponentName }}
  annotations:
    version: v0.0.1
# Change description to something which suits your application
    description: "description"
# Change authors to yourself to begin with
    authors: "authors"
spec:
  components:
    - name: {{ .ComponentName }}
      type: component
      properties:
        image: file://./build/{{ .ComponentName }}_s.wasm
      traits:
        - type: spreadscaler
          properties:
            replicas: 1
{{ if or .ImportNatsCoreWit .ExportNatsCoreRequestReplyWit -}}
# Link component with nats-core to get publishing capability
        - type: link
          properties:
            target:
              name: nats-core
            namespace: wasmcloud
            package: messaging
            interfaces: [consumer]
{{ end -}}
{{ if .ImportNatsKvWit -}}
# Link the component to nats-kv to get [Get, GetAll, Put, Create, Delete] capabilites, important to setup your kv in the nats instance running
        - type: link
          properties:
            target:
              name: map-nats-kv
              config:
                - name: map-nats-kv-config
                  properties:
                    bucket: "my-bucket"
                    url: "nats://127.0.0.1:4222"
            namespace: mattilsynet
            package: map-kv
            interfaces: [key-value]
{{ end -}}
{{ if or .ImportNatsCoreWit .ExportNatsCoreWit .ExportNatsCoreRequestReplyWit -}}
# Setup nats-core provider, such that it's deployed to the wadm server and made available for this application for linking 
    - name: nats-core
      type: capability
      properties:
        image: ghcr.io/wasmcloud/messaging-nats:canary
        config:
          - name: nats-core-config
            properties:
              cluster_uris: "nats://127.0.0.1:4222"
      traits:
        - type: spreadscalar
          properties:
            replicas: 1
{{ end -}}
{{ if or .ExportNatsCoreWit .ExportNatsCoreRequestReplyWit -}}
# linking such that we get subscription to our component
        - type: link
          properties:
            target: {{ .ComponentName }}
            namespace: wasmcloud
            package: messaging
            interfaces: [handler]
            source_config:
              - name: simple-subscription # this name is not important
                properties:
                  subscriptions: wasmcloud.echo # This is the subscription endpoint, do a nats pub "wasmcloud.echo" to test
{{ end -}}
{{ if .ImportNatsJetstreamWit -}}
# linking such that nats-jetstream provider supplies js.publish capability to component
        - type: link
          properties:
            target:
              name: nats-jetstream
              config:
                - name: nats-jetstream-config-publish
                  properties:
                    url: "nats://127.0.0.1:4222"
            namespace: mattilsynet
            package: provider-jetstream-nats
            interfaces: [jetstream-publish]
{{ end -}}
{{ if .ComponentCloudrunAdmin -}}
# linking such that we get cloudrunjob admin capabilities, this is used to deploy cloudrun jobs
        - type: link
          properties:
            target:
              name: map-me-gcp-cloudrunjob-provider
              config:
                - name: map-me-gcp-cloudrunjob-provider-config
                  properties:
                    project_id: "map-ops-dev-c2c8"
                    image: "us-docker.pkg.dev/cloudrun/container/job:latest"
                    location: "europe-north1"
                    # underneath content you get from logging in with gcloud auth login and finding the token on your computer on linux it's /home/$USER/.config/gcloud/application_default_credentials.json
                    map-me-gcp-cloudrunjob-sa: |
                      {
                        "account": "",
                        "client_id": "abc.apps.googleusercontent.com",
                        "client_secret": "abc-abc-123",
                        "quota_project_id": "map-ops-dev-c2c8",
                        "refresh_token": "1//some-stuff-8",
                        "type": "authorized_user",
                        "universe_domain": "googleapis.com"
                      }
            namespace: mattilsynet
            package: me-gcp-cloudrun-job-admin
            interfaces: [me-gcp-cloudrun-job-admin]
{{ end -}}
{{ if or .ImportNatsJetstreamWit .ExportNatsJetstreamWit -}}
# Nats Jetstream provider, provides consumer/publish possibilities, look in source config underneath
    - name: nats-jetstream
      type: capability
      properties:
        image: ghcr.io/Mattilsynet/map-nats-jetstream:v0.0.1-pre-17
{{ if .ExportNatsJetstreamWit }}
      traits:
        - type: link
          properties:
            target:
              name: {{ .ComponentName }}
            source:
              config:
                - name: nats-jetstream-nats-url
                  properties:
                    url: "nats://127.0.0.1:4222"
                - name: nats-jetstream-config-consumer
                  properties:
                    stream-name: "stream-name"
                    subject: "special.subject.>"
                    durable-consumer-name: "{{ .ComponentName }}-consumer"
                    stream-retention-policy: "workqueue" # oneof "interest, workqueue, limits" 
            namespace: mattilsynet
            package: provider-jetstream-nats
            interfaces: [jetstream-consumer]
{{ end }}
{{ end -}}
{{ if or .ImportNatsKvWit .ExportNatsKvWit -}}
# Nats KV provider, look in component target for configuration example, OBS! watch-key not implemented as of 12.02.2025 
    - name: map-nats-kv
      type: capability
      properties:
        image: ghcr.io/Mattilsynet/map-nats-kv:v0.0.2-pre-15
#Link the component to nats-kv to watch-all on a given bucket
      traits:
        - type: link
          properties:
            target: {{ .ComponentName}}
            namespace: mattilsynet
            package: map-kv
            interfaces: [key-value-watcher]
            source_config:
              - name: nats-kv-watcher-config
                properties:
                  bucket: "my-bucket"
                  url: "nats://localhost:4222"
                  #startup_time is in seconds, and it's how many seconds before the provider starts, the downside of this is that you have to make a qualified guess or else this might not work. Wasmcloud doesn't supply us with a component health check which the provider can wait for yet
                  startup_time: "5"
{{ end -}}
{{ if .ComponentCronJob -}}
# Cronjob provider, look in component how it's used
    - name: cronjob
      type: capability
      properties:
        image: ghcr.io/mattilsynet/map-cronjob-provider-wc:v0.0.4
        id: cronjob
      traits:
        - type: link
          properties:
            target: {{ .ComponentName }}
            namespace: mattilsynet
            package: test
            interfaces: [cron-handler]
            target_config:
              - name: log-component-cron-expression
                properties:
                  expression: "@every 2s"
 
{{ end -}}
{{ if .ComponentCloudrunAdmin -}}
    - name: map-me-gcp-cloudrunjob-provider
      type: capability
      properties:
        image: ghcr.io/Mattilsynet/map-me-gcp-cloudrunjob:v0.0.2.3 
      traits:
        - type: spreadscaler
          properties:
            replicas: 1
{{ end -}}
